{
	"info": {
		"_postman_id": "47e15c2b-1cf8-4873-874e-6c92c1179913",
		"name": "/api/v1/speciality_prices",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "37354928"
	},
	"item": [
		{
			"name": "Listar todos os preços de especialidade  - 200 OK",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Verificar se o status é 200 OK\r",
							"pm.test(\"Status 200 OK\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"});\r",
							"\r",
							"// Verificar se a resposta é um objeto\r",
							"pm.test(\"Resposta é um objeto\", function () {\r",
							"    let responseJson = pm.response.json();\r",
							"    pm.expect(responseJson).to.be.an(\"object\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// Geração Dinâmica de Dados\r",
							"let timestamp = new Date().getTime();\r",
							"let title = \"Consulta com Especialista \" + timestamp;\r",
							"let price = Math.floor(Math.random() * 500) + 100; // Preço aleatório entre 100 e 600\r",
							"let sla = 72; // SLA fixo para simplificação\r",
							"let tablePriceID = 1; // Mantendo fixo para garantir criação\r",
							"let specialtyID = 1; // Especialidade padrão\r",
							"\r",
							"// Salvar no ambiente\r",
							"pm.environment.set(\"title\", title);\r",
							"pm.environment.set(\"price\", price);\r",
							"pm.environment.set(\"sla\", sla);\r",
							"pm.environment.set(\"table_price_id\", tablePriceID);\r",
							"pm.environment.set(\"specialty_id\", specialtyID);\r",
							"\r",
							"console.log(\"Título gerado: \" + title);\r",
							"console.log(\"Preço: \" + price);\r",
							"console.log(\"SLA: \" + sla);\r",
							"console.log(\"Table Price ID: \" + tablePriceID);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://fap-clinic.stage.b2b.kompa.com.br/api/v1/specialty_prices",
					"protocol": "https",
					"host": [
						"fap-clinic",
						"stage",
						"b2b",
						"kompa",
						"com",
						"br"
					],
					"path": [
						"api",
						"v1",
						"specialty_prices"
					]
				}
			},
			"response": []
		},
		{
			"name": "Criar novo preço de especialidade - 201 Created",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verificar status 201 - Specialty Price Criado\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(201);\r",
							"});\r",
							"\r",
							"let response = pm.response.json();\r",
							"console.log(\"Response: \", response);\r",
							"\r",
							"if (response.id) {\r",
							"    pm.environment.set(\"specialtyPriceID\", response.id);\r",
							"    console.log(\"Specialty Price ID salvo: \" + response.id);\r",
							"} else {\r",
							"    console.log(\"Specialty Price ID não encontrado.\");\r",
							"}\r",
							"\r",
							"// Gerar um timestamp único para evitar duplicidades\r",
							"const timestamp = new Date().getTime();\r",
							"pm.environment.set(\"timestamp\", timestamp);\r",
							"console.log(\"Timestamp gerado: \" + timestamp);\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// Gerar um timestamp único\r",
							"const timestamp = new Date().getTime();\r",
							"pm.environment.set(\"timestamp\", timestamp);\r",
							"\r",
							"// Definir IDs para `table_price_id` e `specialty_id` - ajuste conforme o GET mais recente\r",
							"pm.environment.set(\"table_price_id\", 1);  // Verificar se existe\r",
							"pm.environment.set(\"specialty_id\", 1);    // Verificar se existe\r",
							"\r",
							"console.log(\"IDs configurados: table_price_id = \" + pm.environment.get(\"table_price_id\") + \" | specialty_id = \" + pm.environment.get(\"specialty_id\"));\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"table_price_id\": 2,\r\n  \"specialty_id\": 1,\r\n  \"title\": \"Consulta com Especialista {{timestamp}}\",\r\n  \"sla\": 72,\r\n  \"price\": 350\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://fap-clinic.stage.b2b.kompa.com.br/api/v1/specialty_prices",
					"protocol": "https",
					"host": [
						"fap-clinic",
						"stage",
						"b2b",
						"kompa",
						"com",
						"br"
					],
					"path": [
						"api",
						"v1",
						"specialty_prices"
					]
				}
			},
			"response": []
		},
		{
			"name": "Obter preço de especialidade por ID - 200 OK",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verificar status 200 OK\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Validar estrutura do Preço da Especialidade\", function () {\r",
							"    let responseJson = pm.response.json();\r",
							"\r",
							"    pm.expect(responseJson).to.have.property(\"id\");\r",
							"    pm.expect(responseJson).to.have.property(\"title\");\r",
							"    pm.expect(responseJson).to.have.property(\"price\");\r",
							"    pm.expect(responseJson).to.have.property(\"sla\");\r",
							"\r",
							"    console.log(\"Preço da Especialidade encontrado: \" + responseJson.title);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://fap-clinic.stage.b2b.kompa.com.br/api/v1/specialty_prices/{{specialtyPriceID}}",
					"protocol": "https",
					"host": [
						"fap-clinic",
						"stage",
						"b2b",
						"kompa",
						"com",
						"br"
					],
					"path": [
						"api",
						"v1",
						"specialty_prices",
						"{{specialtyPriceID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Atualizar o preço de uma especialidade existente - 200 OK",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verificar status 200 - Specialty Price Atualizado\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"});\r",
							"\r",
							"let response = pm.response.json();\r",
							"console.log(\"Response PUT: \", response);\r",
							"\r",
							"// Validar ID atualizado\r",
							"pm.test(\"Validar Specialty Price ID\", function () {\r",
							"    pm.expect(response.id).to.equal(parseInt(pm.environment.get(\"specialtyPriceID\")));\r",
							"});\r",
							"\r",
							"// Validar SLA e Preço Atualizados\r",
							"pm.test(\"Verificar SLA Atualizado\", function () {\r",
							"    pm.expect(response.sla).to.equal(48);\r",
							"});\r",
							"\r",
							"\r",
							"console.log(\"PUT realizado com sucesso.\");\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// Gerar timestamp para garantir dados únicos\r",
							"const timestamp = new Date().getTime();\r",
							"pm.environment.set(\"timestamp\", timestamp);\r",
							"\r",
							"console.log(\"Timestamp gerado para PUT: \" + timestamp);\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"table_price_id\": 2,\r\n  \"specialty_id\": 1,\r\n  \"title\": \"Consulta com Especialista Atualizada {{timestamp}}\",\r\n  \"sla\": 48,\r\n  \"price\": 450\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://fap-clinic.stage.b2b.kompa.com.br/api/v1/specialty_prices/{{specialtyPriceID}}",
					"protocol": "https",
					"host": [
						"fap-clinic",
						"stage",
						"b2b",
						"kompa",
						"com",
						"br"
					],
					"path": [
						"api",
						"v1",
						"specialty_prices",
						"{{specialtyPriceID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Deletar um preço de especialidade - 204 No Content",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verificar status 204 No Content\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(204);\r",
							"    console.log(\"Specialty Price deletado com sucesso. ID: \" + pm.environment.get(\"specialtyPriceID\"));\r",
							"});\r",
							"\r",
							"// Remover a variável do ambiente\r",
							"pm.environment.unset(\"specialtyPriceID\");"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// Geração Dinâmica de Dados\r",
							"let timestamp = new Date().getTime();\r",
							"let title = \"Consulta com Especialista \" + timestamp;\r",
							"let price = Math.floor(Math.random() * 500) + 100; // Preço aleatório entre 100 e 600\r",
							"let sla = 72; // SLA fixo para simplificação\r",
							"let tablePriceID = 1; // Mantendo fixo para garantir criação\r",
							"let specialtyID = 1; // Especialidade padrão\r",
							"\r",
							"// Salvar no ambiente\r",
							"pm.environment.set(\"title\", title);\r",
							"pm.environment.set(\"price\", price);\r",
							"pm.environment.set(\"sla\", sla);\r",
							"pm.environment.set(\"table_price_id\", tablePriceID);\r",
							"pm.environment.set(\"specialty_id\", specialtyID);\r",
							"\r",
							"console.log(\"Título gerado: \" + title);\r",
							"console.log(\"Preço: \" + price);\r",
							"console.log(\"SLA: \" + sla);\r",
							"console.log(\"Table Price ID: \" + tablePriceID);\r",
							"console.log(\"Specialty ID: \" + specialtyID);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "file",
					"file": {}
				},
				"url": {
					"raw": "https://fap-clinic.stage.b2b.kompa.com.br/api/v1/specialty_prices/{{specialtyPriceID}}\n",
					"protocol": "https",
					"host": [
						"fap-clinic",
						"stage",
						"b2b",
						"kompa",
						"com",
						"br"
					],
					"path": [
						"api",
						"v1",
						"specialty_prices",
						"{{specialtyPriceID}}\n"
					]
				}
			},
			"response": []
		}
	]
}