{
	"info": {
		"_postman_id": "6651889d-93e0-4527-b84b-1f1f9afc9a83",
		"name": "/api/v1/profiles",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "37354928"
	},
	"item": [
		{
			"name": "Lista de Perfis - 200 OK",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// Geração Dinâmica Simples\r",
							"let timestamp = new Date().getTime();\r",
							"let profileName = \"Profile_\" + timestamp;\r",
							"let profileType = \"MANAGER\"; // Pode ser \"PROFESSIONAL\" ou \"MANAGER\"\r",
							"let clinicID = 1; // Mantendo fixo para simplificar\r",
							"\r",
							"// Permissões Dinâmicas\r",
							"let permissions = [\r",
							"    \"SCHEDULE_VIEW\",\r",
							"    \"APPOINT_CONSULTATION\"\r",
							"];\r",
							"\r",
							"// Salvar no ambiente\r",
							"pm.environment.set(\"profile_name\", profileName);\r",
							"pm.environment.set(\"profile_type\", profileType);\r",
							"pm.environment.set(\"clinic_id\", clinicID);\r",
							"pm.environment.set(\"permissions\", JSON.stringify(permissions));\r",
							"\r",
							"console.log(\"Profile gerado: \" + profileName);\r",
							"console.log(\"Tipo: \" + profileType);\r",
							"console.log(\"Clinic ID: \" + clinicID);\r",
							"console.log(\"Permissões: \" + permissions.join(\", \"));"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://fap-clinic.stage.b2b.kompa.com.br/api/v1/profiles",
					"protocol": "https",
					"host": [
						"fap-clinic",
						"stage",
						"b2b",
						"kompa",
						"com",
						"br"
					],
					"path": [
						"api",
						"v1",
						"profiles"
					]
				}
			},
			"response": []
		},
		{
			"name": "Criar Perfil - 201 Created",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let response = pm.response.json();\r",
							"if (response.id) {\r",
							"    pm.environment.set(\"profileID\", response.id);\r",
							"    console.log(\"Profile ID salvo: \" + response.id);\r",
							"} else {\r",
							"    console.log(\"Falha ao salvar o Profile ID\");\r",
							"}\r",
							"\r",
							"pm.test(\"Response status code is 201\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(201);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"  pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Active field is present and has a boolean value\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    \r",
							"    pm.expect(responseData).to.have.property('active').that.is.a('boolean');\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Clinic ID field is present and has a numerical value\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    \r",
							"    pm.expect(responseData).to.have.property('clinic_id');\r",
							"    pm.expect(responseData.clinic_id).to.be.a('number');\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Clinic relation object is present and contains required fields\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    \r",
							"    pm.expect(responseData).to.be.an('object');\r",
							"    pm.expect(responseData.clinic_relation).to.exist;\r",
							"    pm.expect(responseData.clinic_relation.date_created).to.exist;\r",
							"    pm.expect(responseData.clinic_relation.date_updated).to.exist;\r",
							"    pm.expect(responseData.clinic_relation.id).to.exist;\r",
							"    pm.expect(responseData.clinic_relation.name).to.exist;\r",
							"    pm.expect(responseData.clinic_relation.preferred_network).to.exist;\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const timestamp = new Date().getTime();\r",
							"pm.environment.set(\"timestamp\", timestamp);\r",
							"console.log(\"Timestamp gerado: \" + timestamp);\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"Profissional {{timestamp}}\",\r\n  \"type\": \"PROFESSIONAL\",\r\n  \"permissions\": [\r\n    \"SCHEDULE_VIEW\",\r\n    \"APPOINT_CONSULTATION\"\r\n  ],\r\n  \"clinic_id\": 7\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://fap-clinic.stage.b2b.kompa.com.br/api/v1/profiles",
					"protocol": "https",
					"host": [
						"fap-clinic",
						"stage",
						"b2b",
						"kompa",
						"com",
						"br"
					],
					"path": [
						"api",
						"v1",
						"profiles"
					]
				}
			},
			"response": []
		},
		{
			"name": "Buscar por ID - 200 OK",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verificar status 200 OK\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Validar estrutura do Profile\", function () {\r",
							"    let responseJson = pm.response.json();\r",
							"\r",
							"    pm.expect(responseJson).to.have.property(\"id\");\r",
							"    pm.expect(responseJson).to.have.property(\"name\");\r",
							"    pm.expect(responseJson).to.have.property(\"type\");\r",
							"\r",
							"    console.log(\"Profile encontrado: \" + responseJson.name);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// Geração Dinâmica Simples\r",
							"let timestamp = new Date().getTime();\r",
							"let profileName = \"Profile_\" + timestamp;\r",
							"let profileType = \"MANAGER\"; // Pode ser \"PROFESSIONAL\" ou \"MANAGER\"\r",
							"let clinicID = 1; // Mantendo fixo para simplificar\r",
							"\r",
							"// Permissões Dinâmicas\r",
							"let permissions = [\r",
							"    \"SCHEDULE_VIEW\",\r",
							"    \"APPOINT_CONSULTATION\"\r",
							"];\r",
							"\r",
							"// Salvar no ambiente\r",
							"pm.environment.set(\"profile_name\", profileName);\r",
							"pm.environment.set(\"profile_type\", profileType);\r",
							"pm.environment.set(\"clinic_id\", clinicID);\r",
							"pm.environment.set(\"permissions\", JSON.stringify(permissions));\r",
							"\r",
							"console.log(\"Profile gerado: \" + profileName);\r",
							"console.log(\"Tipo: \" + profileType);\r",
							"console.log(\"Clinic ID: \" + clinicID);\r",
							"console.log(\"Permissões: \" + permissions.join(\", \"));"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://fap-clinic.stage.b2b.kompa.com.br/api/v1/profiles/{{profileID}}\n",
					"protocol": "https",
					"host": [
						"fap-clinic",
						"stage",
						"b2b",
						"kompa",
						"com",
						"br"
					],
					"path": [
						"api",
						"v1",
						"profiles",
						"{{profileID}}\n"
					]
				}
			},
			"response": []
		},
		{
			"name": "Atualiza um perfil existente  - 200 OK",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verificar status 200 OK\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Validar atualização do Profile\", function () {\r",
							"    let responseJson = pm.response.json();\r",
							"\r",
							"    pm.expect(responseJson).to.have.property(\"id\");\r",
							"    pm.expect(responseJson).to.have.property(\"name\");\r",
							"\r",
							"    console.log(\"Profile atualizado: \" + responseJson.name);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let profileID = pm.environment.get(\"profileID\");\r",
							"\r",
							"if (!profileID) {\r",
							"    console.warn(\"profileID não foi definido. Execute o POST primeiro para criar um Profile.\");\r",
							"} else {\r",
							"    console.log(\"Profile ID para atualização: \" + profileID);\r",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"{{profileName}}\",\r\n  \"type\": \"PROFESSIONAL\",\r\n  \"permissions\": [\r\n    \"SCHEDULE_VIEW\",\r\n    \"APPOINT_CONSULTATION\"\r\n  ],\r\n  \"clinic_id\": 7\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://fap-clinic.stage.b2b.kompa.com.br/api/v1/profiles/{{profileID}}",
					"protocol": "https",
					"host": [
						"fap-clinic",
						"stage",
						"b2b",
						"kompa",
						"com",
						"br"
					],
					"path": [
						"api",
						"v1",
						"profiles",
						"{{profileID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Deletar um perfil - 204 No Content",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verificar status 204 No Content\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(204);\r",
							"    console.log(\"Profile deletado com sucesso. ID: \" + pm.environment.get(\"profileID\"));\r",
							"});\r",
							"\r",
							"// Remover a variável do ambiente\r",
							"pm.environment.unset(\"profileID\");"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// Geração Dinâmica Simples\r",
							"let timestamp = new Date().getTime();\r",
							"let profileName = \"Profile_\" + timestamp;\r",
							"let profileType = \"MANAGER\"; // Pode ser \"PROFESSIONAL\" ou \"MANAGER\"\r",
							"let clinicID = 1; // Mantendo fixo para simplificar\r",
							"\r",
							"// Permissões Dinâmicas\r",
							"let permissions = [\r",
							"    \"SCHEDULE_VIEW\",\r",
							"    \"APPOINT_CONSULTATION\"\r",
							"];\r",
							"\r",
							"// Salvar no ambiente\r",
							"pm.environment.set(\"profile_name\", profileName);\r",
							"pm.environment.set(\"profile_type\", profileType);\r",
							"pm.environment.set(\"clinic_id\", clinicID);\r",
							"pm.environment.set(\"permissions\", JSON.stringify(permissions));\r",
							"\r",
							"console.log(\"Profile gerado: \" + profileName);\r",
							"console.log(\"Tipo: \" + profileType);\r",
							"console.log(\"Clinic ID: \" + clinicID);\r",
							"console.log(\"Permissões: \" + permissions.join(\", \"));"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://fap-clinic.stage.b2b.kompa.com.br/api/v1/profiles/{{profileID}}",
					"protocol": "https",
					"host": [
						"fap-clinic",
						"stage",
						"b2b",
						"kompa",
						"com",
						"br"
					],
					"path": [
						"api",
						"v1",
						"profiles",
						"{{profileID}}"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{bearer_token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					"const token = pm.globals.get('bearer_token');\r",
					"\r",
					"if (token) {\r",
					"    pm.request.headers.upsert({\r",
					"        key: 'Authorization',\r",
					"        value: `Bearer ${token}`\r",
					"    });\r",
					"} else {\r",
					"    console.warn('Token não encontrado na variável global.');\r",
					"}\r",
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	]
}