{
	"info": {
		"_postman_id": "43e271ff-d9cb-4bd0-9c05-0f9072f44834",
		"name": "/api/v1/exams",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "37354928"
	},
	"item": [
		{
			"name": "Listar todos os exames  - 200 OK",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Verificar se o status é 200 OK\r",
							"pm.test(\"Status 200 OK\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"});\r",
							"\r",
							"// Verificar se a resposta é um objeto\r",
							"pm.test(\"Resposta é um objeto\", function () {\r",
							"    let responseJson = pm.response.json();\r",
							"    pm.expect(responseJson).to.be.an(\"object\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// Gerar um nome dinâmico para o exame\r",
							"let timestamp = new Date().getTime();\r",
							"let examName = \"Exame_\" + timestamp;\r",
							"\r",
							"// Salvar as variáveis no ambiente\r",
							"pm.environment.set(\"exam_name\", examName);\r",
							"console.log(\"Nome do Exame gerado: \" + examName);\r",
							"\r",
							"// Verificar se o examID está definido para métodos GET, PUT e DELETE\r",
							"let examID = pm.environment.get(\"examID\");\r",
							"\r",
							"if (!examID && pm.request.method !== \"POST\") {\r",
							"    console.warn(\"examID não está definido. Execute o POST primeiro para criar um Exame.\");\r",
							"} else {\r",
							"    console.log(\"Exam ID: \" + examID);\r",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://fap-clinic.stage.b2b.kompa.com.br/api/v1/exams",
					"protocol": "https",
					"host": [
						"fap-clinic",
						"stage",
						"b2b",
						"kompa",
						"com",
						"br"
					],
					"path": [
						"api",
						"v1",
						"exams"
					]
				}
			},
			"response": []
		},
		{
			"name": "Criar um novo exame - 201 Created",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verificar status 201 - Exame Criado\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(201);\r",
							"});\r",
							"\r",
							"let response = pm.response.json();\r",
							"console.log(\"Response: \", response);\r",
							"\r",
							"// Capturar o ID do exame criado\r",
							"if (response.id) {\r",
							"    pm.environment.set(\"exam_id\", response.id);\r",
							"    console.log(\"Exam ID salvo: \" + response.id);\r",
							"} else {\r",
							"    console.log(\"Exam ID não encontrado na resposta.\");\r",
							"}\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// Resetar IDs antes da criação\r",
							"pm.environment.unset(\"exam_id\");\r",
							"console.log(\"Exam ID resetado.\");\r",
							"\r",
							"// Gerar um timestamp único para evitar duplicidades\r",
							"const timestamp = new Date().getTime();\r",
							"pm.environment.set(\"timestamp\", timestamp);\r",
							"console.log(\"Timestamp gerado: \" + timestamp);\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"Exame Dinâmico {{timestamp}}\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://fap-clinic.stage.b2b.kompa.com.br/api/v1/exams",
					"protocol": "https",
					"host": [
						"fap-clinic",
						"stage",
						"b2b",
						"kompa",
						"com",
						"br"
					],
					"path": [
						"api",
						"v1",
						"exams"
					]
				}
			},
			"response": []
		},
		{
			"name": "Obter exame por ID - 200 OK",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verificar status 200 - Exame Obtido\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"});\r",
							"\r",
							"let response = pm.response.json();\r",
							"console.log(\"Response: \", response);\r",
							"\r",
							"// Verificar ID do exame\r",
							"pm.test(\"Validar Exam ID\", function () {\r",
							"    pm.expect(response.id).to.equal(parseInt(pm.environment.get(\"exam_id\")));\r",
							"});\r",
							"\r",
							"// Verificar nome do exame\r",
							"pm.test(\"Validar Nome do Exame\", function () {\r",
							"    let expectedName = \"Exame Dinâmico \" + pm.environment.get(\"timestamp\");\r",
							"    pm.expect(response.name).to.equal(expectedName);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if (!pm.environment.get(\"exam_id\")) {\r",
							"    throw new Error(\"Exam ID não definido. Execute o POST primeiro.\");\r",
							"}\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://fap-clinic.stage.b2b.kompa.com.br/api/v1/exams/{{exam_id}}",
					"protocol": "https",
					"host": [
						"fap-clinic",
						"stage",
						"b2b",
						"kompa",
						"com",
						"br"
					],
					"path": [
						"api",
						"v1",
						"exams",
						"{{exam_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Atualizar um Exame existente - 200 OK",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verificar status 200 - Exame Atualizado\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"});\r",
							"\r",
							"let response = pm.response.json();\r",
							"console.log(\"Response: \", response);\r",
							"\r",
							"// Verificar nome atualizado\r",
							"pm.test(\"Validar Nome Atualizado\", function () {\r",
							"    let expectedName = \"Exame Atualizado \" + pm.environment.get(\"timestamp\");\r",
							"    pm.expect(response.name).to.equal(expectedName);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if (!pm.environment.get(\"exam_id\")) {\r",
							"    throw new Error(\"Exam ID não definido. Execute o POST primeiro.\");\r",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"Exame Atualizado {{timestamp}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://fap-clinic.stage.b2b.kompa.com.br/api/v1/exams/{{exam_id}}",
					"protocol": "https",
					"host": [
						"fap-clinic",
						"stage",
						"b2b",
						"kompa",
						"com",
						"br"
					],
					"path": [
						"api",
						"v1",
						"exams",
						"{{exam_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Excluir um exame - 204 No Content",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verificar status 204 - Exame Deletado\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(204);\r",
							"});\r",
							"\r",
							"console.log(\"Exam ID \" + pm.environment.get(\"exam_id\") + \" foi excluído.\");"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if (!pm.environment.get(\"exam_id\")) {\r",
							"    throw new Error(\"Exam ID não definido. Execute o POST primeiro.\");\r",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "file",
					"file": {}
				},
				"url": {
					"raw": "https://fap-clinic.stage.b2b.kompa.com.br/api/v1/exams/{{exam_id}}\n",
					"protocol": "https",
					"host": [
						"fap-clinic",
						"stage",
						"b2b",
						"kompa",
						"com",
						"br"
					],
					"path": [
						"api",
						"v1",
						"exams",
						"{{exam_id}}\n"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{bearer_token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					"pm.request.headers.add({\r",
					"    key: 'Authorization',\r",
					"    value: 'Bearer ' + pm.globals.get('bearer_token')\r",
					"});\r",
					""
				]
			}
		}
	]
}