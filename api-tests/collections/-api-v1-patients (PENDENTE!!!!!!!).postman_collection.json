{
	"info": {
		"_postman_id": "6effe519-edd7-45fb-acdc-c6943f918941",
		"name": "/api/v1/patients (PENDENTE!!!!!!!)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "37354928"
	},
	"item": [
		{
			"name": "Listar todos os pacientes - 200 OK",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Num results field exists and is not null\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    \r",
							"    pm.expect(responseData).to.have.property('num_results').that.is.not.null;\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Objects array and nested fields are valid\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    \r",
							"    pm.expect(responseData.objects).to.be.an('array').that.is.not.empty;\r",
							"    \r",
							"    responseData.objects.forEach(function(object) {\r",
							"        pm.expect(object).to.be.an('object');\r",
							"        pm.expect(object.biological_sex).to.be.a('string');\r",
							"        pm.expect(object.birth_date).to.be.a('string');\r",
							"        pm.expect(object.client_id).to.be.a('number');\r",
							"        pm.expect(object.date_created).to.be.a('string');\r",
							"        pm.expect(object.date_updated).to.be.a('string');\r",
							"        pm.expect(object.document_type).to.be.a('string');\r",
							"        pm.expect(object.full_name).to.be.a('string');\r",
							"        pm.expect(object.gender).to.be.a('string');\r",
							"        pm.expect(object.id).to.be.a('number');\r",
							"        pm.expect(object.is_high_executive).to.be.a('boolean');\r",
							"        pm.expect(object.is_other_priority).to.be.a('boolean');\r",
							"        pm.expect(object.is_pcd).to.be.a('boolean');\r",
							"        pm.expect(object.language).to.be.a('string');\r",
							"        pm.expect(object.patient_addresses_relation).to.be.an('object');\r",
							"        pm.expect(object.patient_contact_relation).to.be.an('object');\r",
							"        pm.expect(object.patient_employer_relation).to.be.an('object');\r",
							"        pm.expect(object.registration_date).to.be.a('string');\r",
							"        pm.expect(object.registration_number).to.be.a('string');\r",
							"        pm.expect(object.social_name).to.be.a('string');\r",
							"        pm.expect(object.status).to.be.a('string');\r",
							"    });\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Page and total_pages fields must exist in the response\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    \r",
							"    pm.expect(responseData).to.be.an('object');\r",
							"    pm.expect(responseData).to.have.property('page');\r",
							"    pm.expect(responseData).to.have.property('total_pages');\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://fap-clinic.stage.b2b.kompa.com.br/api/v1/patients",
					"protocol": "https",
					"host": [
						"fap-clinic",
						"stage",
						"b2b",
						"kompa",
						"com",
						"br"
					],
					"path": [
						"api",
						"v1",
						"patients"
					]
				}
			},
			"response": []
		},
		{
			"name": "Criar um Novo Paciente - 201 Created",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"POST - Verificar Criação do Paciente\", function() {\r",
							"    pm.expect(pm.response.code).to.eql(201);\r",
							"    const responseData = pm.response.json();\r",
							"    pm.environment.set(\"patientId\", responseData.id);\r",
							"    console.log(\"Paciente criado com ID:\", responseData.id);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// Gerar número de registro dinâmico\r",
							"const dynamicRegistrationNumber = Math.floor(10000000000 + Math.random() * 90000000000).toString();\r",
							"pm.environment.set(\"dynamicRegistrationNumber\", dynamicRegistrationNumber);\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"client_id\": 37,\r\n  \"document_type\": \"CPF\",\r\n  \"registration_number\": \"{{dynamicRegistrationNumber}}\",\r\n  \"full_name\": \"José da Silva\",\r\n  \"social_name\": \"Zé\",\r\n  \"biological_sex\": \"Masculino\",\r\n  \"gender\": \"Masculino\",\r\n  \"language\": \"pt-BR\",\r\n  \"birth_date\": \"1990-05-10\",\r\n  \"is_pcd\": false,\r\n  \"is_high_executive\": false,\r\n  \"is_other_priority\": false,\r\n  \"status\": \"active\",\r\n  \"registration_date\": \"2025-05-12\",\r\n  \"patient_contact_relation\": {\r\n    \"mobile_phone\": \"11999998888\",\r\n    \"phone\": \"1133334444\",\r\n    \"email\": \"jose.silva@example.com\"\r\n  },\r\n  \"patient_employer_relation\": {\r\n    \"contractor\": \"Empresa X\",\r\n    \"cost_center\": \"CC123\",\r\n    \"admission_date\": \"2020-01-15\",\r\n    \"position\": \"Analista\",\r\n    \"function\": \"TI\",\r\n    \"enrollment_code\": \"ENR98765\"\r\n  },\r\n  \"patient_addresses_relation\": {\r\n    \"zip_code\": \"01001-000\",\r\n    \"street\": \"Av. Paulista\",\r\n    \"number\": \"1000\",\r\n    \"type_address\": \"Residencial\",\r\n    \"complement\": \"Apto 101\",\r\n    \"state\": \"SP\",\r\n    \"city\": \"São Paulo\",\r\n    \"neighborhood\": \"Bela Vista\",\r\n    \"reference_point\": \"Próximo ao MASP\"\r\n  }\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://fap-clinic.stage.b2b.kompa.com.br/api/v1/patients",
					"protocol": "https",
					"host": [
						"fap-clinic",
						"stage",
						"b2b",
						"kompa",
						"com",
						"br"
					],
					"path": [
						"api",
						"v1",
						"patients"
					]
				}
			},
			"response": []
		},
		{
			"name": "Buscar Paciente por ID - 200 OK",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"GET - Verificar Paciente por ID\", function() {\r",
							"    pm.expect(pm.response.code).to.eql(200);\r",
							"    const responseData = pm.response.json();\r",
							"    pm.expect(responseData.id).to.eql(parseInt(pm.environment.get(\"patientId\")));\r",
							"    console.log(\"Paciente obtido com sucesso:\", responseData);\r",
							"});\r",
							"// Test for response status code\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// Test for response time\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"\r",
							"// Test for response body properties\r",
							"pm.test(\"Response body has required properties\", function () {\r",
							"    const response = pm.response.json();\r",
							"    pm.expect(response.biological_sex).to.exist;\r",
							"    pm.expect(response.birth_date).to.exist;\r",
							"    pm.expect(response.client_id).to.exist;\r",
							"    pm.expect(response.date_created).to.exist;\r",
							"    pm.expect(response.date_updated).to.exist;\r",
							"    pm.expect(response.document_type).to.exist;\r",
							"    pm.expect(response.full_name).to.exist;\r",
							"    pm.expect(response.gender).to.exist;\r",
							"    pm.expect(response.id).to.exist;\r",
							"    pm.expect(response.is_high_executive).to.exist;\r",
							"    pm.expect(response.is_other_priority).to.exist;\r",
							"    pm.expect(response.is_pcd).to.exist;\r",
							"    pm.expect(response.language).to.exist;\r",
							"    pm.expect(response.patient_addresses_relation).to.exist;\r",
							"    pm.expect(response.patient_contact_relation).to.exist;\r",
							"    pm.expect(response.patient_employer_relation).to.exist;\r",
							"    pm.expect(response.registration_date).to.exist;\r",
							"    pm.expect(response.registration_number).to.exist;\r",
							"    pm.expect(response.social_name).to.exist;\r",
							"    pm.expect(response.status).to.exist;\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// Verifica se o patientId foi salvo no ambiente\r",
							"if (!pm.environment.get(\"patientId\")) {\r",
							"    throw new Error(\"patientId não encontrado. Execute o POST primeiro.\");\r",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://fap-clinic.stage.b2b.kompa.com.br/api/v1/patients/{{patientId}}",
					"protocol": "https",
					"host": [
						"fap-clinic",
						"stage",
						"b2b",
						"kompa",
						"com",
						"br"
					],
					"path": [
						"api",
						"v1",
						"patients",
						"{{patientId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Atualizar Paciente Existente - 200 OK",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"PUT - Verificar Atualização com Registration Number Dinâmico\", function() {\r",
							"    pm.expect(pm.response.code).to.eql(200);\r",
							"    const updatedData = pm.response.json();\r",
							"    pm.expect(updatedData.registration_number).to.eql(pm.environment.get(\"registration_number\"));\r",
							"    pm.expect(updatedData.full_name).to.eql(\"José da Silva Atualizado\");\r",
							"    console.log(\"Paciente atualizado com sucesso:\", updatedData);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// Verifica se o patientId foi salvo no ambiente\r",
							"if (!pm.environment.get(\"patientId\")) {\r",
							"    throw new Error(\"patientId não encontrado. Execute o POST primeiro.\");\r",
							"}\r",
							"\r",
							"const patientId = pm.environment.get(\"patientId\");\r",
							"\r",
							"// Fazer uma requisição GET para buscar os dados existentes\r",
							"pm.sendRequest({\r",
							"    url: pm.variables.replaceIn(\"/api/v1/patients/\" + patientId),\r",
							"    method: \"GET\"\r",
							"}, function (err, res) {\r",
							"    if (err) {\r",
							"        console.log(\"Erro ao buscar paciente:\", err);\r",
							"    } else {\r",
							"        const data = res.json();\r",
							"\r",
							"        // Salvar o registration_number no ambiente\r",
							"        pm.environment.set(\"registration_number\", data.registration_number);\r",
							"\r",
							"        // Reutilizar os IDs existentes para não duplicar\r",
							"        pm.environment.set(\"patient_contact_id\", parseInt(data.patient_contact_relation.id));\r",
							"        pm.environment.set(\"patient_address_id\", parseInt(data.patient_addresses_relation.id));\r",
							"        pm.environment.set(\"patient_employer_id\", parseInt(data.patient_employer_relation.id));\r",
							"\r",
							"        // Atualizar apenas os campos necessários\r",
							"        const putPayload = {\r",
							"            \"registration_number\": pm.environment.get(\"registration_number\"),\r",
							"            \"full_name\": \"José da Silva Atualizado\",\r",
							"            \"status\": \"INATIVO\",\r",
							"            \"patient_contact_relation\": {\r",
							"                \"id\": pm.environment.get(\"patient_contact_id\"),\r",
							"                \"email\": \"jose.novo@example.com\",\r",
							"                \"mobile_phone\": data.patient_contact_relation.mobile_phone,\r",
							"                \"phone\": data.patient_contact_relation.phone\r",
							"            },\r",
							"            \"patient_addresses_relation\": {\r",
							"                \"id\": pm.environment.get(\"patient_address_id\"),\r",
							"                \"street\": \"Av. Brasil Atualizada\",\r",
							"                \"number\": \"1100\",\r",
							"                \"zip_code\": data.patient_addresses_relation.zip_code,\r",
							"                \"neighborhood\": data.patient_addresses_relation.neighborhood,\r",
							"                \"city\": data.patient_addresses_relation.city,\r",
							"                \"state\": data.patient_addresses_relation.state,\r",
							"                \"type_address\": data.patient_addresses_relation.type_address,\r",
							"                \"reference_point\": data.patient_addresses_relation.reference_point,\r",
							"                \"complement\": data.patient_addresses_relation.complement\r",
							"            },\r",
							"            \"patient_employer_relation\": {\r",
							"                \"id\": pm.environment.get(\"patient_employer_id\"),\r",
							"                \"position\": \"Analista Sênior\",\r",
							"                \"function\": \"TI\",\r",
							"                \"contractor\": data.patient_employer_relation.contractor,\r",
							"                \"cost_center\": data.patient_employer_relation.cost_center,\r",
							"                \"enrollment_code\": data.patient_employer_relation.enrollment_code\r",
							"            }\r",
							"        };\r",
							"\r",
							"        pm.environment.set(\"putPayload\", JSON.stringify(putPayload));\r",
							"    }\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"registration_number\": \"{{registration_number}}\",\r\n  \"full_name\": \"José da Silva Atualizado\",\r\n  \"status\": \"INATIVO\",\r\n  \"patient_contact_relation\": {\r\n    \"id\": {{patient_contact_id}},\r\n    \"email\": \"jose.novo@example.com\",\r\n    \"mobile_phone\": \"11999997777\",\r\n    \"phone\": \"1133334555\"\r\n  },\r\n  \"patient_addresses_relation\": {\r\n    \"id\": {{patient_address_id}},\r\n    \"street\": \"Av. Brasil Atualizada\",\r\n    \"number\": \"1100\",\r\n    \"zip_code\": \"01001-000\",\r\n    \"neighborhood\": \"Bela Vista\",\r\n    \"city\": \"São Paulo\",\r\n    \"state\": \"SP\",\r\n    \"type_address\": \"Residencial\",\r\n    \"reference_point\": \"Próximo ao MASP\",\r\n    \"complement\": \"Apto 101\"\r\n  },\r\n  \"patient_employer_relation\": {\r\n    \"id\": {{patient_employer_id}},\r\n    \"position\": \"Analista Sênior\",\r\n    \"function\": \"TI\",\r\n    \"contractor\": \"Empresa X\",\r\n    \"cost_center\": \"CC123\",\r\n    \"enrollment_code\": \"ENR98765\"\r\n  }\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://fap-clinic.stage.b2b.kompa.com.br/api/v1/patients/{{patientId}}",
					"protocol": "https",
					"host": [
						"fap-clinic",
						"stage",
						"b2b",
						"kompa",
						"com",
						"br"
					],
					"path": [
						"api",
						"v1",
						"patients",
						"{{patientId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Excluir Profissional - 204 No Content",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verificar status 204 - Profissional Deletado\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(204);\r",
							"});\r",
							"\r",
							"console.log(\"Professional ID \" + pm.environment.get(\"professional_id\") + \" foi excluído.\");\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// Geração Dinâmica Simples\r",
							"let timestamp = new Date().getTime();\r",
							"let professionalName = \"Dr. \" + timestamp;\r",
							"let email = \"prof_\" + timestamp + \"@example.com\";\r",
							"let registry = \"CRM\" + timestamp;\r",
							"let document = timestamp.toString().slice(-11); // Gera um CPF dinâmico\r",
							"\r",
							"// IDs Fixos para manter consistência\r",
							"let addressID = 35; // Já existente\r",
							"let profileID = 12; // Já existente\r",
							"let specialtyID = 1; // Já existente\r",
							"let motiveID = 1; // Já existente\r",
							"\r",
							"// Salvar no ambiente\r",
							"pm.environment.set(\"professional_name\", professionalName);\r",
							"pm.environment.set(\"email\", email);\r",
							"pm.environment.set(\"registry\", registry);\r",
							"pm.environment.set(\"document\", document);\r",
							"pm.environment.set(\"address_id\", addressID);\r",
							"pm.environment.set(\"profile_id\", profileID);\r",
							"pm.environment.set(\"specialty_id\", specialtyID);\r",
							"pm.environment.set(\"motive_id\", motiveID);\r",
							"\r",
							"console.log(\"Profissional gerado: \" + professionalName);\r",
							"console.log(\"Email: \" + email);\r",
							"console.log(\"Registry: \" + registry);\r",
							"console.log(\"Document: \" + document);\r",
							"console.log(\"Address ID: \" + addressID);\r",
							"console.log(\"Profile ID: \" + profileID);\r",
							"console.log(\"Specialty ID: \" + specialtyID);\r",
							"console.log(\"Motive ID: \" + motiveID);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "file",
					"file": {}
				},
				"url": {
					"raw": "https://fap-clinic.stage.b2b.kompa.com.br/api/v1/professionals/{{professional_id}}",
					"protocol": "https",
					"host": [
						"fap-clinic",
						"stage",
						"b2b",
						"kompa",
						"com",
						"br"
					],
					"path": [
						"api",
						"v1",
						"professionals",
						"{{professional_id}}"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{bearer_token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	]
}