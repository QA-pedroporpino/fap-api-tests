{
	"info": {
		"_postman_id": "6fe289b5-81d9-4acd-987f-4ddb10bc0feb",
		"name": "/api/v1/professionals",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "37354928"
	},
	"item": [
		{
			"name": "Listar todos os profissionais - 200 OK",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Verificar se o status é 200 OK\r",
							"pm.test(\"Status 200 OK\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"});\r",
							"\r",
							"// Verificar se a resposta é um objeto\r",
							"pm.test(\"Resposta é um objeto\", function () {\r",
							"    let responseJson = pm.response.json();\r",
							"    pm.expect(responseJson).to.be.an(\"object\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// Lista de especialidades válidas (ajustar conforme necessário)\r",
							"const specialties = [\r",
							"    { id: 1, name: \"Cardiologia\" },\r",
							"    { id: 2, name: \"Neurologia\" },\r",
							"    { id: 3, name: \"Oftalmologia\" }\r",
							"];\r",
							"\r",
							"// Gerar um nome dinâmico para o profissional\r",
							"let timestamp = new Date().getTime();\r",
							"let professionalName = \"Dr. \" + timestamp;\r",
							"let email = \"profissional_\" + timestamp + \"@example.com\";\r",
							"let registry = \"CRM\" + timestamp;\r",
							"\r",
							"// Selecionar especialidade e subespecialidade aleatória\r",
							"let specialty = specialties[Math.floor(Math.random() * specialties.length)];\r",
							"\r",
							"// Salvar as variáveis no ambiente\r",
							"pm.environment.set(\"professional_name\", professionalName);\r",
							"pm.environment.set(\"email\", email);\r",
							"pm.environment.set(\"registry\", registry);\r",
							"pm.environment.set(\"specialty_id\", specialty.id);\r",
							"pm.environment.set(\"specialty_name\", specialty.name);\r",
							"\r",
							"console.log(\"Profissional gerado: \" + professionalName);\r",
							"console.log(\"Email: \" + email);\r",
							"console.log(\"CRM: \" + registry);\r",
							"console.log(\"Especialidade: \" + specialty.name);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://fap-clinic.stage.b2b.kompa.com.br/api/v1/professionals",
					"protocol": "https",
					"host": [
						"fap-clinic",
						"stage",
						"b2b",
						"kompa",
						"com",
						"br"
					],
					"path": [
						"api",
						"v1",
						"professionals"
					]
				}
			},
			"response": []
		},
		{
			"name": "Criar um Novo Profissional - 201 Created",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verificar status 201 Created\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Salvar ID do Profissional criado\", function () {\r",
							"    let responseJson = pm.response.json();\r",
							"    \r",
							"    if (responseJson.id) {\r",
							"        pm.environment.set(\"professionalID\", responseJson.id);\r",
							"        console.log(\"Profissional ID salvo: \" + responseJson.id);\r",
							"    } else {\r",
							"        console.warn(\"ID do Profissional não foi gerado.\");\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// Geração Dinâmica Simples\r",
							"let timestamp = new Date().getTime();\r",
							"let professionalName = \"Dr. \" + timestamp;\r",
							"let email = \"prof_\" + timestamp + \"@example.com\";\r",
							"let registry = \"CRM\" + timestamp;\r",
							"let document = timestamp.toString().slice(-11); // Gera um CPF dinâmico\r",
							"\r",
							"// IDs Fixos para manter consistência\r",
							"let addressID = 35; // Já existente\r",
							"let profileID = 12; // Já existente\r",
							"let specialtyID = 1; // Já existente\r",
							"let motiveID = 1; // Já existente\r",
							"\r",
							"// Salvar no ambiente\r",
							"pm.environment.set(\"professional_name\", professionalName);\r",
							"pm.environment.set(\"email\", email);\r",
							"pm.environment.set(\"registry\", registry);\r",
							"pm.environment.set(\"document\", document);\r",
							"pm.environment.set(\"address_id\", addressID);\r",
							"pm.environment.set(\"profile_id\", profileID);\r",
							"pm.environment.set(\"specialty_id\", specialtyID);\r",
							"pm.environment.set(\"motive_id\", motiveID);\r",
							"\r",
							"console.log(\"Profissional gerado: \" + professionalName);\r",
							"console.log(\"Email: \" + email);\r",
							"console.log(\"Registry: \" + registry);\r",
							"console.log(\"Document: \" + document);\r",
							"console.log(\"Address ID: \" + addressID);\r",
							"console.log(\"Profile ID: \" + profileID);\r",
							"console.log(\"Specialty ID: \" + specialtyID);\r",
							"console.log(\"Motive ID: \" + motiveID);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"{{professional_name}}\",\r\n  \"email\": \"{{email}}\",\r\n  \"document_type\": \"CPF\",\r\n  \"document\": \"{{document}}\",\r\n  \"registry_type\": \"CRM\",\r\n  \"registry\": \"{{registry}}\",\r\n  \"active\": true,\r\n  \"profile_id\": {{profile_id}},\r\n  \"address_relation\": {\r\n    \"id\": {{address_id}}\r\n  },\r\n  \"specialty_relation\": [\r\n    {\r\n      \"id\": {{specialty_id}}\r\n    }\r\n  ],\r\n  \"sub_specialty_relation\": [\r\n    {\r\n      \"id\": {{specialty_id}}\r\n    }\r\n  ],\r\n  \"motive_relation\": [\r\n    {\r\n      \"id\": {{motive_id}}\r\n    }\r\n  ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://fap-clinic.stage.b2b.kompa.com.br/api/v1/professionals",
					"protocol": "https",
					"host": [
						"fap-clinic",
						"stage",
						"b2b",
						"kompa",
						"com",
						"br"
					],
					"path": [
						"api",
						"v1",
						"professionals"
					]
				}
			},
			"response": []
		},
		{
			"name": "Buscar Profissional por ID - 200 OK",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verificar status 200 OK\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Validar estrutura do Profissional\", function () {\r",
							"    let responseJson = pm.response.json();\r",
							"\r",
							"    pm.expect(responseJson).to.have.property(\"id\");\r",
							"    pm.expect(responseJson).to.have.property(\"name\");\r",
							"    pm.expect(responseJson).to.have.property(\"email\");\r",
							"    pm.expect(responseJson).to.have.property(\"registry\");\r",
							"\r",
							"    console.log(\"Profissional encontrado: \" + responseJson.name);\r",
							"    console.log(\"Email: \" + responseJson.email);\r",
							"    console.log(\"Registry: \" + responseJson.registry);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// Geração Dinâmica Simples\r",
							"let timestamp = new Date().getTime();\r",
							"let professionalName = \"Dr. \" + timestamp;\r",
							"let email = \"prof_\" + timestamp + \"@example.com\";\r",
							"let registry = \"CRM\" + timestamp;\r",
							"let document = timestamp.toString().slice(-11); // Gera um CPF dinâmico\r",
							"\r",
							"// IDs Fixos para manter consistência\r",
							"let addressID = 35; // Já existente\r",
							"let profileID = 12; // Já existente\r",
							"let specialtyID = 1; // Já existente\r",
							"let motiveID = 1; // Já existente\r",
							"\r",
							"// Salvar no ambiente\r",
							"pm.environment.set(\"professional_name\", professionalName);\r",
							"pm.environment.set(\"email\", email);\r",
							"pm.environment.set(\"registry\", registry);\r",
							"pm.environment.set(\"document\", document);\r",
							"pm.environment.set(\"address_id\", addressID);\r",
							"pm.environment.set(\"profile_id\", profileID);\r",
							"pm.environment.set(\"specialty_id\", specialtyID);\r",
							"pm.environment.set(\"motive_id\", motiveID);\r",
							"\r",
							"console.log(\"Profissional gerado: \" + professionalName);\r",
							"console.log(\"Email: \" + email);\r",
							"console.log(\"Registry: \" + registry);\r",
							"console.log(\"Document: \" + document);\r",
							"console.log(\"Address ID: \" + addressID);\r",
							"console.log(\"Profile ID: \" + profileID);\r",
							"console.log(\"Specialty ID: \" + specialtyID);\r",
							"console.log(\"Motive ID: \" + motiveID);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://fap-clinic.stage.b2b.kompa.com.br/api/v1/professionals/{{professionalID}}",
					"protocol": "https",
					"host": [
						"fap-clinic",
						"stage",
						"b2b",
						"kompa",
						"com",
						"br"
					],
					"path": [
						"api",
						"v1",
						"professionals",
						"{{professionalID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Atualizar Profissional Existente - 200 OK",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Verificar status 200 OK\r",
							"pm.test(\"Verificar status 200 OK\", function () {\r",
							"    if (pm.response.code === 200) {\r",
							"        console.log(\"Status 200 OK - Teste aprovado\");\r",
							"    }\r",
							"});\r",
							"\r",
							"// Validar atualização do Profissional\r",
							"pm.test(\"Validar atualização do Profissional\", function () {\r",
							"    let responseJson;\r",
							"\r",
							"    try {\r",
							"        responseJson = pm.response.json();\r",
							"    } catch (err) {\r",
							"        console.warn(\"Erro ao processar o JSON. Response não é um JSON válido.\");\r",
							"        return; // Não executa os testes se o JSON estiver inválido\r",
							"    }\r",
							"\r",
							"    // Verificar as propriedades apenas se o JSON estiver válido\r",
							"    if (responseJson.id && responseJson.name && responseJson.email) {\r",
							"        console.log(\"Profissional atualizado: \" + responseJson.name);\r",
							"    } else {\r",
							"        console.warn(\"As propriedades esperadas não foram encontradas no response.\");\r",
							"    }\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// Definir o ID do profissional dinamicamente, se necessário\r",
							"// Verificar se a variável 'professionalID' está definida\r",
							"if (!pm.variables.get(\"professionalID\")) {\r",
							"    console.warn(\"A variável 'professionalID' não foi definida.\");\r",
							"} else {\r",
							"    console.log(\"ID do Profissional definido: \" + pm.variables.get(\"professionalID\"));\r",
							"}\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"Updated {{professional_name}}\",\r\n  \"email\": \"updated_{{email}}\",\r\n  \"document\": \"{{document}}\",\r\n  \"registry\": \"Updated {{registry}}\",\r\n  \"active\": true\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://fap-clinic.stage.b2b.kompa.com.br/api/v1/professionals/{{professionalID}}",
					"protocol": "https",
					"host": [
						"fap-clinic",
						"stage",
						"b2b",
						"kompa",
						"com",
						"br"
					],
					"path": [
						"api",
						"v1",
						"professionals",
						"{{professionalID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Excluir Profissional - 204 No Content",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Verificar status 204 No Content\r",
							"pm.test(\"Verificar status 204 No Content\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(204);\r",
							"    console.log(\"Profissional deletado com sucesso. ID: \" + pm.environment.get(\"professionalID\"));\r",
							"});\r",
							"\r",
							"// Remover a variável do ambiente\r",
							"pm.environment.unset(\"professionalID\");"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// Geração Dinâmica Simples\r",
							"let timestamp = new Date().getTime();\r",
							"let professionalName = \"Dr. \" + timestamp;\r",
							"let email = \"prof_\" + timestamp + \"@example.com\";\r",
							"let registry = \"CRM\" + timestamp;\r",
							"let document = timestamp.toString().slice(-11); // Gera um CPF dinâmico\r",
							"\r",
							"// IDs Fixos para manter consistência\r",
							"let addressID = 35; // Já existente\r",
							"let profileID = 12; // Já existente\r",
							"let specialtyID = 1; // Já existente\r",
							"let motiveID = 1; // Já existente\r",
							"\r",
							"// Salvar no ambiente\r",
							"pm.environment.set(\"professional_name\", professionalName);\r",
							"pm.environment.set(\"email\", email);\r",
							"pm.environment.set(\"registry\", registry);\r",
							"pm.environment.set(\"document\", document);\r",
							"pm.environment.set(\"address_id\", addressID);\r",
							"pm.environment.set(\"profile_id\", profileID);\r",
							"pm.environment.set(\"specialty_id\", specialtyID);\r",
							"pm.environment.set(\"motive_id\", motiveID);\r",
							"\r",
							"console.log(\"Profissional gerado: \" + professionalName);\r",
							"console.log(\"Email: \" + email);\r",
							"console.log(\"Registry: \" + registry);\r",
							"console.log(\"Document: \" + document);\r",
							"console.log(\"Address ID: \" + addressID);\r",
							"console.log(\"Profile ID: \" + profileID);\r",
							"console.log(\"Specialty ID: \" + specialtyID);\r",
							"console.log(\"Motive ID: \" + motiveID);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "file",
					"file": {}
				},
				"url": {
					"raw": "https://fap-clinic.stage.b2b.kompa.com.br/api/v1/professionals/{{professionalID}}",
					"protocol": "https",
					"host": [
						"fap-clinic",
						"stage",
						"b2b",
						"kompa",
						"com",
						"br"
					],
					"path": [
						"api",
						"v1",
						"professionals",
						"{{professionalID}}"
					]
				}
			},
			"response": []
		}
	]
}